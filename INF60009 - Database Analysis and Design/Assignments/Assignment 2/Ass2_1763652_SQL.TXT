--Modify this script so that it meets the requirements of Assignment 2 
--When done, complete these tasks
--1. Save this file so that it can be submitted via ESP
--2. Execute the contents of this file in ISQL Jr
--3. Copy and paste the output from ISQL Jr into a file as described in the assignment document and submit via ESP
prompt START OF OUTPUT SECTION
prompt Student ID:    1763652
prompt Student Name:  Sze Yick
prompt Tutor Name:    Huan Ngyuen
prompt Tutorial Day:  Thursday
prompt Tutorial Time: 7:30pm
prompt Tutorial Room: BA604
prompt --------------------------------------------------------------
prompt Task 1.1 
prompt ENGLISH STATEMENTS
--XXXXXXXXXXXXXXXX (Replace this line with your ENGISGH sentences for 1.1. here)
ONE CUSTOMER MAY create MANY SHOP ORDERS
ONE SALESPERON MAY be allocated fulfill MANY SHOP ORDERS
ONE SHOP ORDER MUST be created by ONE CUSTOMER
ONE SHOP ORDER MUST be allocated to ONE SALES PERSON
ONE SHOP ORDER MAY contain MANY ORDER LINES
ONE PRODUCT MAY be for MANY ORDER LINES
ONE ORDER LINE MUST have ONE SHOP ORDER
ONE ORDER LINE MUST have ONE PRODUCT

prompt --------------------------------------------------------------
prompt Task 1.2 
prompt DROP ALL TABLES
--XXXXXXXXXXXXXXXX 

prompt --------------------------------------------------------------
prompt Task 1.3 
prompt CREATE ALL TABLES
--XXXXXXXXXXXXXXXX 
--Create Customer Table
CREATE TABLE CUSTOMER (
	custid NUMBER(4) PRIMARY KEY,
	cfirstname VARCHAR2(30),
	csurname VARCHAR2(30),
	billingaddr VARCHAR2(30),
	cgender VARCHAR2(1),
	CONSTRAINT CHK_CUSTOMER_GENDER CHECK (cgender IN ('M', 'F'))
);
--Create Sales Person Table
CREATE TABLE SALESPERSON (
	spid NUMBER(4) PRIMARY KEY,
	spfirstname VARCHAR2(30),
	spsurname VARCHAR2(30),
	spgender VARCHAR2(1),
);
--Create Product Table
CREATE TABLE PRODUCT (
	prodid NUMBER(4) PRIMARY KEY,
	prodname VARCHAR2(30),
	currentprice NUMBER(6,2)
	CONSTRAINT CHK_PRODUCT_CURRENTPRICE CHECK (currentprice > 0),
	CONSTRAINT CHK_PRODUCT_CURRENTPRICE CHECK (currentprice > 0 AND currentprice < 5000)
);
--Create Shop Order Table
CREATE TABLE SHOPORDER(
	ordid NUMBER(4) PRIMARY KEY,
	deliveryaddress VARCHAR2(30),
	custid NUMBER(4) REFERENCES CUSTOMER,
	spid NUMBER(4) REFERENCES SALESPERSON
);

prompt --------------------------------------------------------------
prompt Task 1.4 
prompt INSERT CUSTOMER VALID DATA
--XXXXXXXXXXXXXXXX 
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (1, 'Casey', 'Cartwright', 'F', '1 High St Kew');
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (2, 'Evan', 'Chambers', 'M', '8 Red St Rye');
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (3, 'Calvin', 'Owens', 'M', '7 Long Rd Lara');
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (4, 'Frannie', 'Morgan', 'F', '9 Down Pde Upwey');
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (5, 'Cappie', 'Jones', 'F', '6 Mist St Toorak');
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (6, 'Dana', 'Stockwell', 'F', '2 Tree St Epping');
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (7, 'Ash', 'Howard', 'F', '4 Elm Ave Elwood');
prompt --------------------------------------------------------------
prompt Task 1.5 
prompt ATTEMPT TO INSERT CUSTOMER ROWS WITH INVALID VALUES
--XXXXXXXXXXXXXXXX 
INSERT INTO CUSTOMER (custid, cfirstname, csurname, billingaddr, cgender) VALUES (8, 'Milton', 'Hastings', 'X', '3 Blue St, Kew');
prompt --------------------------------------------------------------
prompt Task 1.6 
prompt INSERT PRODUCT VALID DATA
--XXXXXXXXXXXXXXXX 
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (31, 'Lounge Chair', 799);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (32, 'Study Lamp', 150);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (33, 'Large Desk', 550);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (34, 'Hallway Table', 1200);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (35, 'Kitchen Stool', 220);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (36, 'Lamp Stand (Tall)', 189);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (37, 'Zzz King Size Single Bed', 400);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (38, 'Bedside Lamp', 99);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (39, 'Coffe Table', 650);
prompt --------------------------------------------------------------
prompt Task 1.7 
prompt ATTEMPT TO INSERT PRODUCT ROWS WITH INVALID VALUES
--XXXXXXXXXXXXXXXX 
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (40, 'Cupboard', -99);
INSERT INTO PRODUCT (prodid, prodname, currentprice) VALUES (41, 'Bookcase', 8765);
prompt --------------------------------------------------------------
prompt Task 1.8 
prompt INSERT SALESPERSON VALID DATA
--XXXXXXXXXXXXXXXX 
INSERT INTO SALESPERSON (spid, spfirstname, spsurname, spgender) VALUES (21, 'Serena', 'Van der Woodsen', 'F');
INSERT INTO SALESPERSON (spid, spfirstname, spsurname, spgender) VALUES (22, 'Dan', 'Humphrey', 'M');
INSERT INTO SALESPERSON (spid, spfirstname, spsurname, spgender) VALUES (23, 'Blair', 'Waldorf', 'F');
INSERT INTO SALESPERSON (spid, spfirstname, spsurname, spgender) VALUES (24, 'Chuck', 'Bass', 'M');
INSERT INTO SALESPERSON (spid, spfirstname, spsurname, spgender) VALUES (25, 'Lily', 'Van der Woodsen', 'F');
INSERT INTO SALESPERSON (spid, spfirstname, spsurname, spgender) VALUES (26, 'Nate', 'Archibald', 'M');
prompt --------------------------------------------------------------
prompt Task 1.9 
prompt INSERT SHOP ORDERS VALID DATA
--XXXXXXXXXXXXXXXX 
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (41, NULL, 1, 23);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (51, NULL, 1, 23);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (42, NULL, 2, 21);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (43, NULL, 2, 23);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (49, NULL, 2, 24);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (44, '1 John St Hawthorn', 3, 26);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (48, NULL, 3, 26);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (45, '1254 Dunstall Rd Coorparoo', 4, 22);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (47, '727 Hudson Rd Glenorchy', 4, 26);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (50, '517 Franklin St Dowerin', 4, 22);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (41, NULL, 6, 21);

prompt --------------------------------------------------------------
prompt Task 1.10 
prompt ATTEMPT TO INSERT SHOP ORDERS ROWS WITH INVALID VALUES
--XXXXXXXXXXXXXXXX 
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (66, NULL, 5, 29);
INSERT INTO SHOPORDER (ordid, deliveryaddress, custid, spid) VALUES (67, NULL, 9, 26);
prompt --------------------------------------------------------------
prompt Task 1.11 
prompt INSERT SHOP ORDER LINES VALID DATA
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Task 1.12 
prompt ATTEMPT TO INSERT  ORDER LINES ROWS WITH INVALID VALUES
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 1.13
prompt LIST ALL ROWS FROM ALL TABLES
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------

prompt Query 2.1
prompt COUNT ALL SHOPORDERS
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 2.2
prompt COUNT ALL SHOPORDERS FOR FEMALES
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 2.3
prompt COUNT ALL SHOPORDERS BY GENDER
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 2.4
prompt LIST ORDER and CUST DATA FOR FEMALES in Cust/Order SEQ
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 2.5
prompt LIST ORDER , ORDER LINE and CUST DATA in Cust/Order/Prod SEQ
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------

prompt Query 3.1
prompt DROP TABLES (DO NOT PLACE STATEMENTS HERE - PUT THEM IN section 1.2). 
prompt --------------------------------------------------------------
prompt Query 3.2
prompt CREATE TABLE STATEMENTS. 
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 3.3
prompt INSERT MANAGERS. 
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 3.4
prompt INSERT ALLOCATIONS. 
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 3.5
prompt ALLOCATION PK ERRORS
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 3.6
prompt INSERT QUALITY CHECKS
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 3.7
prompt QUALITYCHECK PK ERRORS
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 3.8
prompt QUALITYCHECK FK ERRORS
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 3.9
prompt LIST ALL ROWS FROM ALL ADDITIONAL TABLES
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------

prompt Task 4.1 
prompt PRICE DIFF QUERY
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Task 4.2 
prompt UNION ROLE QUERY
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Task 4.3 
prompt UNION ADDRESS QUERY
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Task 4.4 
prompt ORDERLINE QUERY
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Task 4.5 
prompt AVG PRICE QUERY
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------

prompt Query 5.1 
prompt LIST SHOPORDERS FOR CUSTOMERS (INCLUDE CUSTOMERS WITHOUT ORDERS)
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 5.2
prompt COUNT SHOPORDERS FOR CUSTOMERS
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 5.3
prompt LIST ORDERLINES BY CUSTOMER
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 5.4
prompt LIST ORDERLINES BY PRODUCT
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 5.5
prompt LIST ORDERLINES BY PRODUCT (RANGE 2-10)
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 5.6
prompt LIST ORDERLINES BY PRODUCT.  ONLY LAMPS
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 5.7
prompt AVG SCORE QUERY A
--XXXXXXXXXXXXXXXX 
prompt --------------------------------------------------------------
prompt Query 5.8
prompt AVG SCORE QUERY B
--XXXXXXXXXXXXXXXX 


